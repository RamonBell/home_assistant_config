esphome:
  name: mountain_windows_middle
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: DrZzs-NoT
  password: !secret NoT

  ap:
    ssid: mountain_windows_middle
    password: "12345678"
    
captive_portal: 

web_server:
  port: 80
  
# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

output:
  - platform: gpio
    id: 'mwm_1'
    pin: D1
  - platform: gpio
    id: 'mwm_2'
    pin: D2
  - platform: gpio
    id: 'mwm_3'
    pin: D5
  - platform: gpio
    id: 'mwm_4'
    pin: D6

switch:
  - platform: output
    name: "mwm1"
    output: 'mwm_1'
    id: mwm1
  - platform: output
    name: "mwm2"
    output: 'mwm_2'
    id: mwm2
  - platform: output
    name: "mwm3"
    output: 'mwm_3'
    id: mwm3
  - platform: output
    name: "mwm4"
    output: 'mwm_4'
    id: mwm4

binary_sensor:
  - platform: gpio
    pin: 
      number: D7
      mode: INPUT_PULLUP
      inverted: True
    name: "Middle Bottom Shade Closed"
    id: mb_closed
    on_press:
      then:
        - switch.turn_off: mwm3
        - switch.turn_off: mwm4
  - platform: gpio
    pin:
      number: D0
      mode: INPUT_PULLUP
      inverted: True
    name: "Middle Bottom Shade Open"
    id: mb_open
    on_press:
      then:
        - switch.turn_off: mwm3
        - switch.turn_off: mwm4
  - platform: gpio
    pin: 
      number: TX
      mode: INPUT_PULLUP
      inverted: True
    name: "Middle Upper Shade Closed"
    id: mu_closed
    on_press:
      then:
        - switch.turn_off: mwm1
        - switch.turn_off: mwm2
  - platform: gpio
    pin: 
      number: RX
      mode: INPUT_PULLUP
      inverted: True
    name: "Middle Upper Shade Open"
    id: mu_open
    on_press:
      then:
        - switch.turn_off: mwm1
        - switch.turn_off: mwm2
  - platform: gpio
    pin: D3
    name: "mwm Upper Button"
    filters:
      invert:
    on_press:
      then:
        - lambda: |
            if (id(mw_middle_upper).position == cover::COVER_OPEN) {
              if (id(mwm1).state){
                // shade is opening
                id(mw_middle_upper).stop();
              } else {
                // shade is open and not moving
                id(mw_middle_upper).close();
              }
            } else {
              if (id(mwm2).state){
                // shade is closing
                id(mw_middle_upper).stop();
              } else {
                // shade is closed and not moving
                id(mw_middle_upper).open();
              }
            }
  - platform: gpio
    pin: D4
    name: "mwm Lower Button"
    filters:
      invert:
    on_press:
      then:
        - lambda: |
            if (id(mw_middle_lower).position == cover::COVER_OPEN) {
              if (id(mwm3).state){
                // shade is opening
                id(mw_middle_lower).stop();
              } else {
                // shade is open and not moving
                id(mw_middle_lower).close();
              }
            } else {
              if (id(mwm4).state){
                // shade is closing
                id(mw_middle_lower).stop();
              } else {
                // shade is closed and not moving
                id(mw_middle_lower).open();
              }
            }
cover:
  - platform: template
    name: "MW Middle Upper"
    id: mw_middle_upper
    optimistic: true
    open_action:
      - switch.turn_off: mwm2
      - switch.turn_on: mwm1
      - delay: 93s
      - switch.turn_off: mwm1
    close_action:
      - switch.turn_off: mwm1
      - switch.turn_on: mwm2
      - delay: 93s
      - switch.turn_off: mwm2
    stop_action:
      - switch.turn_off: mwm1
      - switch.turn_off: mwm2
  - platform: template
    name: "MW Middle Lower"
    id: mw_middle_lower
    optimistic: true
    open_action:
      - switch.turn_off: mwm4
      - switch.turn_on: mwm3
      - delay: 93s
      - switch.turn_off: mwm3
    close_action:
      - switch.turn_off: mwm3
      - switch.turn_on: mwm4
      - delay: 93s
      - switch.turn_off: mwm4
    stop_action:
      - switch.turn_off: mwm3
      - switch.turn_off: mwm4

  - platform: template
    name: "mwm Upper Control"
    id: mwm_upper_control
    assumed_state: true
    open_action:
      - switch.turn_off: mwm2
      - switch.turn_on: mwm1
    close_action:
      - switch.turn_off: mwm1
      - switch.turn_on: mwm2
    stop_action:
      - switch.turn_off: mwm1
      - switch.turn_off: mwm2
  - platform: template
    name: "mwm Lower Control"
    id: mwm_lower_control
    assumed_state: true
    open_action:
      - switch.turn_off: mwm4
      - switch.turn_on: mwm3
    close_action:
      - switch.turn_off: mwm3
      - switch.turn_on: mwm4
    stop_action:
      - switch.turn_off: mwm3
      - switch.turn_off: mwm4